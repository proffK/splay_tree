<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="test_8c" kind="file" language="C++">
    <compoundname>test.c</compoundname>
    <includes refid="splay__tree_8h" local="no">splay_tree.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/time.h</includes>
    <includes local="no">sys/resource.h</includes>
    <incdepgraph>
      <node id="13">
        <label>splay_tree.h</label>
        <link refid="splay__tree_8h"/>
      </node>
      <node id="15">
        <label>errno.h</label>
      </node>
      <node id="17">
        <label>sys/resource.h</label>
      </node>
      <node id="12">
        <label>test.c</label>
        <link refid="test.c"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sys/time.h</label>
      </node>
      <node id="14">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="test_8c_1a4f4f2a2155a82f9881b227d0cc9b5bb3" prot="public" static="no">
        <name>TEST_CHECK</name>
        <param><defname>cond</defname></param>
        <param><defname>num</defname></param>
        <param><defname>msg</defname></param>
        <initializer>do {\
                if (!(cond)) {\
                        printf(&quot;Test %d %s failed.\n&quot;, (num), (msg));\
                        fflush(stdout);\
                } else {\
                        printf(&quot;Test %d %s succeed.\n&quot;, (num), (msg));\
                        fflush(stdout);\
                }\
        } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="28" column="9" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="test_8c_1aa58c6e40436bbb090294218b7d758a15" prot="public" static="no">
        <name>tests</name>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15aa6a67d1b0fabc23213ccb16dde3f6340" prot="public">
          <name>CR_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a3c46440bd424ceb03755a0dd8d272db5" prot="public">
          <name>CR_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a87834f9fdca91358010aa5ee6c094edb" prot="public">
          <name>CR_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a41d9456e27c1e3fa4c260a8693200a21" prot="public">
          <name>DL_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a3e11ef4579ee471c577b4e778eb8ac74" prot="public">
          <name>DL_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a19794a16a2b57411f9bcce7163ef6bb4" prot="public">
          <name>DL_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15ae74647d79dc1ec8065eb222f3f6f057f" prot="public">
          <name>INS_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a56e5eded4de5ed3d0ef527f7a137e473" prot="public">
          <name>INS_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15aa51ba0f430615a7f1ea2688da0dbb0b9" prot="public">
          <name>INS_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15abb05ddda5b4037c9062b15af3814443c" prot="public">
          <name>INS_TEST_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15afecb2e244ea0dd50050dd0d6c624fd3e" prot="public">
          <name>FIND_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15aa92cc815992981cca83a1a3af9b510cc" prot="public">
          <name>FIND_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a0c0741dc9c5895c5256f79679e5e7ed9" prot="public">
          <name>FIND_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a965c7c0bf7ac5e9ecb304fc984cab9ec" prot="public">
          <name>FIND_TEST_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15ac582b7bf558175f5cdc79c56b6b872a1" prot="public">
          <name>REM_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a71667909ee4e1ce92338ce8794b486a0" prot="public">
          <name>REM_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15ad7a73ce10609ead340152886e6ba1e3d" prot="public">
          <name>REM_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15aeffdf693770f94a7d178263ea81878ac" prot="public">
          <name>REM_TEST_3</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15af2acf2c79998f466d18e81b3cffe1859" prot="public">
          <name>FOR_TEST_0</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a3493e46390e5e91da3d10fdd0b201088" prot="public">
          <name>FOR_TEST_1</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="test_8c_1aa58c6e40436bbb090294218b7d758a15a9c206bf3bddb6826127eeb7e71824f12" prot="public">
          <name>FOR_TEST_2</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="39" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="39" bodyend="61"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="test_8c_1acacc466c5f54e89b133baada202b96c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref></type>
        <definition>node_key test_get_key</definition>
        <argsstring>(node_elem elem)</argsstring>
        <name>test_get_key</name>
        <param>
          <type><ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref></type>
          <declname>elem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="63" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="test_8c_1a8c4b3fa1f319dd684e57b67ac9e8fa18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int callback</definition>
        <argsstring>(splay_tree *tr, node_elem *elem, node_key *key, void *data)</argsstring>
        <name>callback</name>
        <param>
          <type><ref refid="structsplay__tree__t" kindref="compound">splay_tree</ref> *</type>
          <declname>tr</declname>
        </param>
        <param>
          <type><ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref> *</type>
          <declname>elem</declname>
        </param>
        <param>
          <type><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref> *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="65" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="237" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="test_8c_1a466504436cc93f215bdb4f8405e96476" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int cr_del_test</definition>
        <argsstring>()</argsstring>
        <name>cr_del_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="72" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="72" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="test_8c_1a4f2796f9ec9079eb510f165d1be14b2c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ins_find_test</definition>
        <argsstring>()</argsstring>
        <name>ins_find_test</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="107" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="107" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="test_8c_1ae66f6b31b5ad750f1fe042a706a4e3d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>()</argsstring>
        <name>main</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" line="214" column="1" bodyfile="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c" bodystart="214" bodyend="235"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>a<sp/>my<sp/>splay<sp/>tree<sp/>library<sp/>:)</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2016<sp/><sp/>Kireev<sp/>Klim</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/><sp/><sp/><sp/>My<sp/>email:<sp/>proffk@linux.com</highlight></codeline>
<codeline lineno="19"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="splay__tree_8h" kindref="compound">splay_tree.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/resource.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEST_CHECK(cond,<sp/>num,<sp/>msg)<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>do<sp/>{\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!(cond))<sp/>{\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Test<sp/>%d<sp/>%s<sp/>failed.\n&quot;,<sp/>(num),<sp/>(msg));\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(&quot;Test<sp/>%d<sp/>%s<sp/>succeed.\n&quot;,<sp/>(num),<sp/>(msg));\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fflush(stdout);\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>tests<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CR_TEST_0,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CR_TEST_1,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CR_TEST_2,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DL_TEST_0,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DL_TEST_1,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DL_TEST_2,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INS_TEST_0,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INS_TEST_1,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INS_TEST_2,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>INS_TEST_3,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FIND_TEST_0,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FIND_TEST_1,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FIND_TEST_2,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FIND_TEST_3,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REM_TEST_0,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REM_TEST_1,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REM_TEST_2,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>REM_TEST_3,</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR_TEST_0,</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR_TEST_1,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FOR_TEST_2</highlight></codeline>
<codeline lineno="61"><highlight class="normal">};</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref><sp/>test_get_key(<ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref><sp/>elem);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callback(<ref refid="structsplay__tree__t" kindref="compound">splay_tree</ref>*<sp/>tr,<sp/><ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref>*<sp/>elem,<sp/><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref>*<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref><sp/>test_get_key(<ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref><sp/>elem)<sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>elem;</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cr_del_test()</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rlimit<sp/>old_limit;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">rlimit<sp/>new_limit;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsplay__tree__t" kindref="compound">splay_tree</ref>*<sp/>tr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getrlimit(RLIMIT_AS,<sp/>&amp;old_limit);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_limit.rlim_cur<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_limit.rlim_max<sp/>=<sp/>old_limit.rlim_max;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setrlimit(RLIMIT_AS,<sp/>&amp;new_limit);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/><ref refid="splay__tree_8h_1a0086993090dee397aa266a132569d555" kindref="member">splay_tree_create</ref>(test_get_key);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(tr<sp/>==<sp/>NULL,<sp/>CR_TEST_0,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>memory<sp/>for<sp/>creation&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setrlimit(RLIMIT_AS,<sp/>&amp;old_limit);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/><ref refid="splay__tree_8h_1a0086993090dee397aa266a132569d555" kindref="member">splay_tree_create</ref>(NULL);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(tr<sp/>==<sp/>NULL,<sp/>CR_TEST_0,<sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>get_key&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/><ref refid="splay__tree_8h_1a0086993090dee397aa266a132569d555" kindref="member">splay_tree_create</ref>(test_get_key);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(tr<sp/>!=<sp/>NULL,<sp/>CR_TEST_2,<sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>creation&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(<ref refid="splay__tree_8h_1a6a387effe045024d0cae83bc5c88b20e" kindref="member">splay_tree_delete</ref>(NULL)<sp/>!=<sp/>0,<sp/>DL_TEST_0,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;incorrect<sp/>delete<sp/>addres&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(<ref refid="splay__tree_8h_1a6a387effe045024d0cae83bc5c88b20e" kindref="member">splay_tree_delete</ref>(tr)<sp/>==<sp/>0,<sp/>DL_TEST_1,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>deletion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ins_find_test()</highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>rlimit<sp/>old_limit;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>struct<sp/>rlimit<sp/>new_limit;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ret<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structsplay__tree__t" kindref="compound">splay_tree</ref>*<sp/>tr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/><ref refid="splay__tree_8h_1a0086993090dee397aa266a132569d555" kindref="member">splay_tree_create</ref>(test_get_key);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(tr<sp/>!=<sp/>NULL,<sp/>INS_TEST_0,<sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>creation&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(NULL,<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK((ret<sp/>==<sp/>-1<sp/>||<sp/>errno<sp/>==<sp/>EINVAL),<sp/>INS_TEST_1,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;insert<sp/>NULL<sp/>pointer&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1ad26b991760d97b2a784c985b9d85aee7" kindref="member">splay_tree_find</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/><ref refid="splay__tree_8h_1ab2d3aba6d0a6d310e3f391c5f1fef6db" kindref="member">NULL_NELEM</ref>,<sp/>FIND_TEST_3,<sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Search<sp/>in<sp/>empty<sp/>tree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a469b82470eb7b11bac82b1d8bcf6ebc9" kindref="member">splay_tree_for_each_elem</ref>(tr,<sp/>callback,<sp/>NULL);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>-1,<sp/>FOR_TEST_1,<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;For<sp/>each<sp/>in<sp/>empty<sp/>tree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a339a3d41a67650e7aa4515d60b0bae30" kindref="member">splay_tree_remove</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>-1,<sp/>REM_TEST_0,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Remove<sp/>unfounded<sp/>elem&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>5);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>0,<sp/>INS_TEST_2,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>root<sp/>insertion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>6);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>7);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>8);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>9);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>5);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>4);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>2);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>3);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>2);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>0,<sp/>INS_TEST_3,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>non-root<sp/>insertion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1ad26b991760d97b2a784c985b9d85aee7" kindref="member">splay_tree_find</ref>(NULL,<sp/>1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/><ref refid="splay__tree_8h_1ad6e70e55dc3e1a45628016a76ce823e4" kindref="member">ERR_NELEM</ref>,<sp/>FIND_TEST_1,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>NULL<sp/>tree<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1ad26b991760d97b2a784c985b9d85aee7" kindref="member">splay_tree_find</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>1,<sp/>FIND_TEST_1,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>tree<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a339a3d41a67650e7aa4515d60b0bae30" kindref="member">splay_tree_remove</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>0,<sp/>REM_TEST_1,<sp/></highlight><highlight class="stringliteral">&quot;Correct<sp/>remove&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1ad26b991760d97b2a784c985b9d85aee7" kindref="member">splay_tree_find</ref>(tr,<sp/>10);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/><ref refid="splay__tree_8h_1ab2d3aba6d0a6d310e3f391c5f1fef6db" kindref="member">NULL_NELEM</ref>,<sp/>FIND_TEST_2,</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>fail<sp/>tree<sp/>search&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a6a387effe045024d0cae83bc5c88b20e" kindref="member">splay_tree_delete</ref>(tr);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>0,<sp/>DL_TEST_2,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;correct<sp/>full<sp/>tree<sp/>deletion&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tr<sp/>=<sp/><ref refid="splay__tree_8h_1a0086993090dee397aa266a132569d555" kindref="member">splay_tree_create</ref>(test_get_key);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>2);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>3);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>4);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>5);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>6);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>7);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>8);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a339a3d41a67650e7aa4515d60b0bae30" kindref="member">splay_tree_remove</ref>(tr,<sp/>8);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>8);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>1);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a3a3969a2ca409834fcbc7dd7272fcfd9" kindref="member">splay_tree_insert</ref>(tr,<sp/>5);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a339a3d41a67650e7aa4515d60b0bae30" kindref="member">splay_tree_remove</ref>(tr,<sp/>5);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a469b82470eb7b11bac82b1d8bcf6ebc9" kindref="member">splay_tree_for_each_elem</ref>(NULL,<sp/>callback,<sp/>NULL);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>-1,<sp/>FOR_TEST_0,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>each<sp/>NULL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a469b82470eb7b11bac82b1d8bcf6ebc9" kindref="member">splay_tree_for_each_elem</ref>(tr,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>-1,<sp/>FOR_TEST_1,<sp/></highlight><highlight class="stringliteral">&quot;For<sp/>each<sp/>no<sp/>callback&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a469b82470eb7b11bac82b1d8bcf6ebc9" kindref="member">splay_tree_for_each_elem</ref>(tr,<sp/>callback,<sp/>NULL);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TEST_CHECK(ret<sp/>==<sp/>0,<sp/>FOR_TEST_2,<sp/></highlight><highlight class="stringliteral">&quot;Correct<sp/>for<sp/>each&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ret<sp/>=<sp/><ref refid="splay__tree_8h_1a6a387effe045024d0cae83bc5c88b20e" kindref="member">splay_tree_delete</ref>(tr);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getrlimit(RLIMIT_AS,<sp/>&amp;old_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_limit.rlim_cur<sp/>=<sp/>4;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_limit.rlim_max<sp/>=<sp/>old_limit.rlim_max;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setrlimit(RLIMIT_AS,<sp/>&amp;new_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setrlimit(RLIMIT_AS,<sp/>&amp;old_limit);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main()<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>test_res<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_res<sp/>=<sp/>cr_del_test();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_res<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;All<sp/>create<sp/>and<sp/>delete<sp/>test<sp/>passed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Create<sp/>and<sp/>delete<sp/>test<sp/>%d<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>test_res);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_res<sp/>=<sp/>ins_find_test();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(test_res<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;All<sp/>insert<sp/>and<sp/>find<sp/>test<sp/>passed\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Insert<sp/>and<sp/>find<sp/>test<sp/>%d<sp/>failed\n&quot;</highlight><highlight class="normal">,<sp/>test_res);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>test_res;</highlight></codeline>
<codeline lineno="235"><highlight class="normal">}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>callback(<ref refid="structsplay__tree__t" kindref="compound">splay_tree</ref>*<sp/>tr,<sp/><ref refid="splay__tree_8h_1a63ae18d1e62ef66f2b7e5e76cd04a27f" kindref="member">node_elem</ref>*<sp/>elem,<sp/><ref refid="splay__tree_8h_1adcfee39dc0f7f5e13313c7413093d98b" kindref="member">node_key</ref>*<sp/>key,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>data)</highlight></codeline>
<codeline lineno="238"><highlight class="normal">{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;elem:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>*elem);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/chaperone/Documents/Programs/Lunev/splay_tree/test.c"/>
  </compounddef>
</doxygen>
